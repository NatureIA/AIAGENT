import os
import json
import requests
from openai import OpenAI

# === Configura√ß√µes ===
NUMERO_DONO = "5549984094010"  # <-- teu n√∫mero aqui, no formato 55 + DDD + n√∫mero

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
ZAPI_INSTANCE = os.getenv("ZAPI_INSTANCE")
ZAPI_TOKEN = os.getenv("ZAPI_TOKEN")

client = OpenAI(api_key=OPENAI_API_KEY)

# === L√™ mensagem recebida ===
with open("entrada.json", "r", encoding="utf-8") as f:
    entrada = json.load(f)

numero = str(entrada.get("numero", "")).strip()
mensagem = entrada.get("mensagem", "").strip()

# === Verifica se veio de grupo ===
# Grupos do WhatsApp v√™m com h√≠fen ("-") no ID
if "-" in numero and numero != NUMERO_DONO:
    print("Mensagem de grupo ignorada.")
    exit(0)

# === Verifica se √© o dono ===
sou_dono = numero == NUMERO_DONO

# === Se n√£o √© o dono e n√£o cont√©m 'zumo', ignora ===
if not sou_dono and "zumo" not in mensagem.lower():
    print("Mensagem sem comando secreto, ignorando.")
    exit(0)

# === Remove o comando 'Zumo' e obt√©m a instru√ß√£o ===
instrucoes = mensagem.lower().split("zumo", 1)[1].strip() if "zumo" in mensagem.lower() else mensagem

if not instrucoes:
    resposta_texto = "Ol√°! Diga 'Zumo' seguido da sua instru√ß√£o üòâ"
else:
    prompt = f"O usu√°rio enviou: '{instrucoes}'. Responda em portugu√™s de forma natural e √∫til."
    try:
        completion = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "Voc√™ √© um assistente inteligente, √∫til e educado."},
                {"role": "user", "content": prompt}
            ]
        )
        resposta_texto = completion.choices[0].message.content.strip()
    except Exception as e:
        resposta_texto = f"[ERRO GPT]: {e}"

# === Envia resposta via Z-API ===
url_envio = f"https://api.z-api.io/instances/{ZAPI_INSTANCE}/token/{ZAPI_TOKEN}/send-text"
payload = {"phone": numero, "message": resposta_texto}

try:
    r = requests.post(url_envio, json=payload)
    if r.status_code == 200:
        print("Mensagem enviada com sucesso!")
    else:
        print(f"Falha ao enviar: {r.text}")
except Exception as e:
    print(f"Erro ao enviar via Z-API: {e}")

# === Salva hist√≥rico em saida.json ===
with open("saida.json", "w", encoding="utf-8") as f:
    json.dump({
        "numero": numero,
        "mensagem": mensagem,
        "resposta": resposta_texto,
        "sou_dono": sou_dono
    }, f, ensure_ascii=False, indent=2)

print("Processo conclu√≠do.")
